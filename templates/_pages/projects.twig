{# layout #}
{% extends "_layouts/base.twig" %}

{# 
- on charge le même template avec deux URL / dans deux cas

1. On charge ce template quand on a une URL qui correspond à une single (la page projects) > Craft nous donne une variable "entry"
2. On charge ce template quand on a une URL qui correspond à une categorie > Craft nous donne une variable "category"

PROBLEME: on fait appel à une variable entry qui est créée par Craft UNIQUEMENT si ce template est chargé via une URL d'entry / single

SOLUTION: si variable entry pas définie, on la défini nous même
#}

{% if entry is not defined %}
  {% set entry = craft.entries()
    .section("projectsPage")
    .one() %}
{% endif %}


{# content #}
{% block main %}

  {# page title #}
  <div class="c-pagesection  c-pagesection--brand">
    <div class="l-container">
      {# @TODO: create macro for this #}
      {% set bigTitle = entry.commonPageBigTitle|replace({"{{{": "<span>", "}}}": "</span>"}) %}
      <h1 class="c-pagetitle  u-mb-none">{{ bigTitle|raw }}</h1>
    </div>
  </div>

  {# categories and projects #}
  <div class="c-pagesection">
    <div class="l-container">

      {# get categories #}
      {# aller chercher toutes les IDS de projets, ne prendre que les categories qui sont liées à au moins une ID de projet #}
      {% set allProjectsIds = craft.entries()
        .section("projects")
        .ids() %}

      {% set projectsCategories = craft.categories()
        .group("projectTypes")
        .relatedTo(allProjectsIds)
        .all() %}

      {% for item in projectsCategories %}
        {% if loop.first %}<ul>{% endif %}
          {% if loop.first %}<li><a href="/projects/">All types</a></li>{% endif %}
          <li><a href="{{ item.url }}">{{ item.title }}</a></li>
        {% if loop.last %}</ul>{% endif %}
      {% endfor %}

      {# list project types categories #}

      {# get all projects (query only, no .all() etc.) #}  
      {% set allProjects = craft.entries()
        .section("projects")
        .orderBy("postDate DESC")
        .limit(12) %}
      
      {# si on est sur une URL de categorie, Craft défini une variable "category" automatiquement. 
      
      Si cette variable est définie, on utilise {% do %} pour ajouter un paramètre relatedTo(category) à notre query qui va chercher les projets #}
      {% if category is defined %}
        {% do allProjects.relatedTo(category) %}
      {% endif %}

      {# paginate 
        - on lui passe une query / requête Craft dans laquelle il y a un paramètre limit (pas de .all() ou .one() etc au bout)
        - il renvoie deux choses
          1. un objet qui contieznt toutes les infos pour faire une interface de pagination
          2. un tableau d'objet qui contient nos entries pour chaque page. Ce tableau comporte autant d'objets par page que spécifié par le paramètre limit
        - paginate va aussi automatiquement créer du routing pour que les URL /p1 /p2 /p3 mènent vers le même template que celui sur lequel l'interface de pagination se trouve  
      #}
      {% paginate allProjects as pagination, projects %}
      
      {# on boucle sur les entries de la page #}
      {% for item in projects %}
        {% if loop.first %}<ul class="l-grid  l-grid--2cols@small  l-grid--3cols@medium  l-grid--4cols@large">{% endif %}

          <li>
            {% include "_components/projectcard.twig" with {
              project: item
            } only %}
          </li>

        {% if loop.last %}</ul>{% endif %}
      {% endfor %}

      {# pagination #}
      {% if pagination.totalPages > 1 %}
        <nav aria-label="pagination">
          <ul class="c-pagination">

            {# link to first page #}
            {% if pagination.prevUrl %}
              <li class="c-pagination__item"><a class="c-pagination__previous" href="{{ pagination.firstUrl }}">First</a></li>
            {% endif %}

            {# link to previous page #}
            {% for page, url in pagination.getPrevUrls(1) %}
              <li class="c-pagination__item"><a class="c-pagination__link" href="{{ url }}">{{ page }}</a></li>
            {% endfor %}

            {# link to current page #}
            <li class="c-pagination__item"><a class="c-pagination__link  is-active" href="#">{{ pagination.currentPage }}</a></li>

            {# link to next page #}
            {% for page, url in pagination.getNextUrls(1) %}
              <li class="c-pagination__item"><a class="c-pagination__link" href="{{ url }}">{{ page }}</a></li>
            {% endfor %}

            {# link to last page #}
            {% if pagination.nextUrl %}
              <li class="c-pagination__item"><a class="c-pagination__next" href="{{ pagination.lastUrl }}">Last</a></li>
            {% endif %}

          </ul>
        </nav>
      {% endif %}

    </div>
  </div>
{% endblock %}